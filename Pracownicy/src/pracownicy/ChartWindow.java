/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pracownicy;

import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Szymon
 */
public class ChartWindow extends javax.swing.JFrame {
    
    private static ChartWindow chartWindow;
    private ArrayList<Worker> lista = new ArrayList<>();
    private DataBase db;
    private DefaultListModel model;
    
    public synchronized static ChartWindow getInstance() {
        if (chartWindow == null) {
            chartWindow = new ChartWindow();            
        }
        chartWindow.setVisible(true);
        return chartWindow;
    }
    
    /**
     * Creates new form ChartWindow
     */
    public ChartWindow() {
        this.db = new DataBase();
        this.lista = db.getWorkers();
        initComponents();
    }
    
    /**
     * @desc update all info inside window
     */
    private void refresh(){
        this.db = new DataBase();
        this.lista = db.getWorkers();
        this.updateList();
        this.countWorkers();
        this.minSalary();
        this.maxSalary();
        this.avgSalary();
    }

    /**
     * @desc update label showing number of worker objects
     */
    private void countWorkers(){
        this.jLabelWorkerCount.setText("Ilość pracowników : " + lista.size());
    }
    
    /**
     * Update label showing minimum salary
     */
    private void minSalary(){
        int min = 0;
        int x;
        
        for(int i = 0 ; i < lista.size() ; i++){
                // Get salary from each worker on the list 
           x = Integer.parseInt(((Worker)lista.get(i)).getSalary());
           if(i == 0){
               min = x;
           }
           if(x < min){
               min = x;
           }
        }
        this.jLabelMinSalary.setText("Najmniejsza płaca : " + min);
    }
    
    /**
     * Update label showing maximum salary
     */
    private void maxSalary(){
        int max = 0;
        int x;
        
        for(int i = 0 ; i < lista.size() ; i++){
                // Get salary from each worker on the list 
           x = Integer.parseInt(((Worker)lista.get(i)).getSalary());
           if(i == 0){
               max = x;
           }
           if(x > max){
               max = x;
           }
        }
        this.jLabelMaxSalary.setText("Największa płaca : " + max);
    }
    
    /**
     * Update label showing avarage salary
     */
    private void avgSalary(){
        int avg = 0;
        int x;
        
        if(lista.size() < 1){
            avg = 0;
        } else {
            for(int i = 0 ; i < lista.size() ; i++){
                    // Get salary from each worker on the list 
               x = Integer.parseInt(((Worker)lista.get(i)).getSalary());
               avg += x;
            }
            avg = avg / lista.size();
        }
        this.jLabelAvgSalary.setText("Średnie zarobki : " + avg);
    }
    
    /**
     * Updates list with worker names, surenames and position
     */
    private void updateList(){
        model.clear();
        
        for(int i = 0 ; i < lista.size() ; i++){
            model.addElement(lista.get(i));
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListWorkers = new javax.swing.JList();
        jLabelWorkerCount = new javax.swing.JLabel();
        jLabelAvgSalary = new javax.swing.JLabel();
        jButtonRefresh = new javax.swing.JButton();
        jButtonShowChart = new javax.swing.JButton();
        jComboBoxChart = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabelMaxSalary = new javax.swing.JLabel();
        jLabelMinSalary = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Wykresy");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jListWorkers.setModel(model = new DefaultListModel());
        jScrollPane1.setViewportView(jListWorkers);

        jLabelWorkerCount.setText("Ilość pracowników :");

        jLabelAvgSalary.setText("Średnie zarobki :");

        jButtonRefresh.setText("Odświerz");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jButtonShowChart.setText("Pokaż wykres");
        jButtonShowChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowChartActionPerformed(evt);
            }
        });

        jComboBoxChart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Zarobki", "Stanowiska" }));

        jLabel4.setText("Wybierz wykres :");

        jLabelMaxSalary.setText("Największa płaca :");

        jLabelMinSalary.setText("Najmniejsza płaca :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonShowChart)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxChart, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabelWorkerCount))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelMinSalary)
                                            .addComponent(jLabelMaxSalary))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabelAvgSalary)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelWorkerCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelAvgSalary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMaxSalary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMinSalary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxChart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRefresh)
                            .addComponent(jButtonShowChart))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @desc creates selected chart
     * @param evt 
     */
    private void jButtonShowChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowChartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonShowChartActionPerformed

    /**
     * @desc disposes of chartWindow
     * @param evt 
     */
    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        this.refresh();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        this.refresh();
    }//GEN-LAST:event_formComponentShown

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonShowChart;
    private javax.swing.JComboBox jComboBoxChart;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAvgSalary;
    private javax.swing.JLabel jLabelMaxSalary;
    private javax.swing.JLabel jLabelMinSalary;
    private javax.swing.JLabel jLabelWorkerCount;
    private javax.swing.JList jListWorkers;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
